/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gr4.ticketmanagement.display;

import com.gr4.ticketmanagement.DAO.ReturnTicketDAO;
import com.gr4.ticketmanagement.entities.Bill;
import com.gr4.ticketmanagement.entities.Ticket;
import com.gr4.ticketmanagement.exceptionlist.NoResultException;
import com.gr4.ticketmanagement.log.Loggable;
import java.awt.Dialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Date;
import java.sql.Time;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.logging.log4j.Logger;

/**
 *
 * @author hailo
 */
public class SearchReturnTicketByIdFrm extends javax.swing.JFrame implements ActionListener {

    private ArrayList<Bill> listBill;
//    private final Logger logger = getLogger("ReturnTicketDAO");

    /**
     * Creates new form SearchReturnTicketByIdFrm
     */
    public SearchReturnTicketByIdFrm() {
        initComponents();
        jPanelTableResult.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtIdSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanelTableResult = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResult = new javax.swing.JTable();
        btnSelect = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Return Ticket");

        txtIdSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdSearchActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        tblResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Ticket", "Customer name", "Movie", "Room", "Schedule", "Seat"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblResult);
        if (tblResult.getColumnModel().getColumnCount() > 0) {
            tblResult.getColumnModel().getColumn(0).setResizable(false);
            tblResult.getColumnModel().getColumn(1).setResizable(false);
            tblResult.getColumnModel().getColumn(2).setResizable(false);
            tblResult.getColumnModel().getColumn(4).setResizable(false);
            tblResult.getColumnModel().getColumn(5).setResizable(false);
        }

        btnSelect.setText("Select");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTableResultLayout = new javax.swing.GroupLayout(jPanelTableResult);
        jPanelTableResult.setLayout(jPanelTableResultLayout);
        jPanelTableResultLayout.setHorizontalGroup(
            jPanelTableResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
            .addGroup(jPanelTableResultLayout.createSequentialGroup()
                .addGap(293, 293, 293)
                .addComponent(btnSelect)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelTableResultLayout.setVerticalGroup(
            jPanelTableResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTableResultLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSelect)
                .addGap(32, 32, 32))
        );

        jLabel2.setText("Search Ticket By ID:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelTableResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtIdSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37)
                        .addComponent(btnSearch)
                        .addGap(40, 40, 40)
                        .addComponent(btnCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(btnCancel)
                    .addComponent(jLabel2))
                .addGap(46, 46, 46)
                .addComponent(jPanelTableResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdSearchActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        tblResult.setVisible(true);
//        logger.info("Searching Ticket; "+txtIdSearch.getText());
        ReturnTicketDAO data = new ReturnTicketDAO();
        int search = 0;
        DefaultTableModel tableModel = (DefaultTableModel) tblResult.getModel();
        while (tableModel.getRowCount() > 0) {
            tableModel.removeRow(0);
        }
        try {
            search = Integer.parseInt(txtIdSearch.getText());
            listBill = data.searchTicket(search);
            if (listBill == null) {
                throw new NoResultException();
            }
            for (Bill b : listBill) {
//            System.out.println(b.getId()+" " + b.getTotalPrice());
                String movieName = "";
                int roomName = 0;
                int schedule = 0;
                String seat = "";
                Date day = null;
                Time time = null;
                for (Ticket t : b.getListTickets()) {
                    if (search == t.getId()) {
                        movieName = t.getSchedule().getMovie().getName();
                        roomName = t.getSchedule().getRoom().getNumber();
                        schedule = t.getSchedule().getId();
                        seat = t.getSeat().getPosition();
                        day = t.getSchedule().getShowTime().getDate();
                        time = t.getSchedule().getShowTime().getStart();
                    }
                }
                tableModel.addRow(new Object[]{
                    search,
                    b.getBuyer().getName(),
                    movieName,
                    roomName,
                    day.toString() + time.toString(),
                    seat
                });
                jPanelTableResult.setVisible(true);
            }
        } catch (NumberFormatException e) {
//            logger.error(e);
            JOptionPane.showMessageDialog(rootPane, "Invalid value");

        } catch (NoResultException ex) {
//            Logger.getLogger(SearchReturnTicketByIdFrm.class.getName()).log(Level.SEVERE, null, ex);
//            logger.info(ex);
            JOptionPane.showMessageDialog(rootPane, "Không tìm thấy vé trong CSDL");
        }

//        ArrayList<Bill> listBill = data.searchTicket(search);

    }//GEN-LAST:event_btnSearchActionPerformed

    public void loadData(){
        tblResult.setVisible(true);
//        logger.info("Searching Ticket; "+txtIdSearch.getText());
        ReturnTicketDAO data = new ReturnTicketDAO();
        int search = 0;
        DefaultTableModel tableModel = (DefaultTableModel) tblResult.getModel();
        while (tableModel.getRowCount() > 0) {
            tableModel.removeRow(0);
        }
        try {
            search = Integer.parseInt(txtIdSearch.getText());
            listBill = data.searchTicket(search);
            if (listBill == null) {
                throw new NoResultException();
            }
            for (Bill b : listBill) {
//            System.out.println(b.getId()+" " + b.getTotalPrice());
                String movieName = "";
                int roomName = 0;
                int schedule = 0;
                String seat = "";
                Date day = null;
                Time time = null;
                for (Ticket t : b.getListTickets()) {
                    if (search == t.getId()) {
                        movieName = t.getSchedule().getMovie().getName();
                        roomName = t.getSchedule().getRoom().getNumber();
                        schedule = t.getSchedule().getId();
                        seat = t.getSeat().getPosition();
                        day = t.getSchedule().getShowTime().getDate();
                        time = t.getSchedule().getShowTime().getStart();
                    }
                }
                tableModel.addRow(new Object[]{
                    search,
                    b.getBuyer().getName(),
                    movieName,
                    roomName,
                    day.toString() + time.toString(),
                    seat
                });
                jPanelTableResult.setVisible(true);
            }
        } catch (NumberFormatException e) {
//            logger.error(e);
            JOptionPane.showMessageDialog(rootPane, "Invalid value");

        } catch (NoResultException ex) {
//            Logger.getLogger(SearchReturnTicketByIdFrm.class.getName()).log(Level.SEVERE, null, ex);
//            logger.info(ex);
            JOptionPane.showMessageDialog(rootPane, "Không tìm thấy vé trong CSDL");
        }
    }
            
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        new ReturnTicketHome().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed
    private Bill createNewPenaltyBill() {
        int index = tblResult.getSelectedRow();
        Bill penaltyBill = listBill.get(index);
        penaltyBill.setBillType("penalty");
        Ticket returnTicket = null;
        for (Ticket tk : penaltyBill.getListTickets()) {
            if (tk.getId() == (int) tblResult.getValueAt(index, 0)) {
                returnTicket = tk;
            }
        }
        ArrayList<Ticket> penaltyList = new ArrayList<>();
        penaltyList.add(returnTicket);
        penaltyBill.setListTickets(penaltyList);
        penaltyBill.setTotalPrice((float) (returnTicket.getPrice() - returnTicket.getPrice() * 0.3));
        return penaltyBill;
    }
    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        // TODO add your handling code here:        
        ReturnTicketBillFrm returnTicketBillFrm = new ReturnTicketBillFrm(createNewPenaltyBill());
//        returnTicketBillFrm.setBill(createNewPenaltyBill());
        returnTicketBillFrm.setVisible(true);
        tblResult.setVisible(false);
    }//GEN-LAST:event_btnSelectActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SearchReturnTicketByIdFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SearchReturnTicketByIdFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SearchReturnTicketByIdFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SearchReturnTicketByIdFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new SearchReturnTicketByIdFrm().setVisible(true);
//                
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSelect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanelTableResult;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblResult;
    private javax.swing.JTextField txtIdSearch;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.

    }
}
